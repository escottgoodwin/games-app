version: '3'
services:
  api_dev:
    build:
      context: ./sports_backend/
    depends_on:
      - db
    command: nodemon app.js
    volumes:
      - ./sports_backend:/usr/app
      - /app/node_modules
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgres://docker:docker@db:5432/sports
      NODE_ENV: development
      PORT: 8000
      SPORTS_API_KEY: e045499649254664873b0e6f3c6fed2d
      WEATHER_API_KEY: e66516444f8fa668eb1b2bf3aa88675f

  client_dev:
    build:
      context: ./games-client/
    command: npm start
    volumes:
      - ./games-client/:/usr/app
      - /usr/app/node_modules
    depends_on:
      - api_dev
    environment:
      - SKIP_PREFLIGHT_CHECK=true
    ports:
      - "3000:3000"

  client_storybook:
    build:
      context: ./games-client/
    command: npm run storybook
    volumes:
      - ./games-client/:/usr/app
      - /usr/app/node_modules
    depends_on:
      - client_dev
    ports:
      - "6006:6006"

  db:
    image: postgres
    container_name: pg-docker
    ports:
      - "5400:5432"
    environment:
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
    volumes:
      - ./postgres.conf:/etc/postgresql/postgresql.conf
      - ./data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    restart: always

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080